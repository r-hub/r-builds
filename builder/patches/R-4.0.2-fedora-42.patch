diff --git a/configure b/configure
index 7a9f1f0..30d76b6 100755
--- a/configure
+++ b/configure
@@ -45339,7 +45339,7 @@ char BZ2_bzlibVersion ();
 #endif
 #endif
 int
-main ()
+main (void)
 {
 return BZ2_bzlibVersion ();
   ;
@@ -45400,9 +45400,11 @@ else
 /* end confdefs.h.  */
 
 #ifdef HAVE_BZLIB_H
+#include <stdlib.h> // for exit
+#include <string.h> // for strcmp
 #include <bzlib.h>
 #endif
-int main() {
+int main(void) {
     char *ver = BZ2_bzlibVersion();
     exit(strcmp(ver, "1.0.6") < 0);
 }
@@ -46109,6 +46111,7 @@ else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
+#include <stdlib.h>
 #include <string.h>
 #include <curl/curl.h>
 int main()
From 5c5c426023c4f2c9d22582a5f94f9b3337f4973b Mon Sep 17 00:00:00 2001
From: plummer <plummer@00db46b3-68df-0310-9c12-caf00c1e9a41>
Date: Wed, 16 Apr 2025 21:29:31 +0000
Subject: [PATCH] Fixes for Tcl v9

git-svn-id: https://svn.r-project.org/R/trunk@88149 00db46b3-68df-0310-9c12-caf00c1e9a41
---
 src/library/tcltk/src/tcltk.c | 46 ++++++++++++++++++++---------------
 1 file changed, 26 insertions(+), 20 deletions(-)

diff --git a/src/library/tcltk/src/tcltk.c b/src/library/tcltk/src/tcltk.c
index a326ddb6731..c55c9b31424 100644
--- a/src/library/tcltk/src/tcltk.c
+++ b/src/library/tcltk/src/tcltk.c
@@ -36,6 +36,11 @@
 
 Tcl_Interp *RTcl_interp;
 
+/* For Tcl < 8.7 */
+#ifndef TCL_SIZE_MAX
+typedef int Tcl_Size;
+#endif
+
 static void RTcl_dec_refcount(SEXP R_tclobj)
 {
     Tcl_DecrRefCount((Tcl_Obj *) R_ExternalPtrAddr(R_tclobj));
@@ -331,9 +336,9 @@ SEXP RTcl_StringFromObj(SEXP args)
 
 SEXP RTcl_ObjAsCharVector(SEXP args)
 {
-    int count;
+    Tcl_Size count, i;
     Tcl_Obj **elem, *obj;
-    int ret, i;
+    int ret;
     SEXP ans;
 
     if (TYPEOF(CADR(args)) != EXTPTRSXP)
@@ -341,10 +346,10 @@ SEXP RTcl_ObjAsCharVector(SEXP args)
     obj = (Tcl_Obj *) R_ExternalPtrAddr(CADR(args));
     if (!obj) error(_("invalid tclObj -- perhaps saved from another session?"));
     ret = Tcl_ListObjGetElements(RTcl_interp, obj, &count, &elem);
-    if (ret != TCL_OK)
+    if (ret != TCL_OK || count > R_XLEN_T_MAX)
 	return RTcl_StringFromObj(args);
-
-    PROTECT(ans = allocVector(STRSXP, count));
+	
+    PROTECT(ans = allocVector(STRSXP, (R_xlen_t) count));
     for (i = 0 ; i < count ; i++) {
 	char *s;
 	Tcl_DString s_ds;
@@ -405,9 +410,9 @@ SEXP RTcl_ObjFromCharVector(SEXP args)
 
 SEXP RTcl_ObjAsDoubleVector(SEXP args)
 {
-    int count;
+    Tcl_Size count, i;
     Tcl_Obj **elem, *obj;
-    int ret, i;
+    int ret;
     double x;
     SEXP ans;
 
@@ -422,10 +427,10 @@ SEXP RTcl_ObjAsDoubleVector(SEXP args)
 
     /* Then try as list */
     ret = Tcl_ListObjGetElements(RTcl_interp, obj, &count, &elem);
-    if (ret != TCL_OK) /* didn't work, return NULL */
+    if (ret != TCL_OK || count > R_XLEN_T_MAX) /* didn't work, return NULL */
 	return R_NilValue;
-
-    ans = allocVector(REALSXP, count);
+	
+    ans = allocVector(REALSXP, (R_xlen_t) count);
     for (i = 0 ; i < count ; i++){
 	ret = Tcl_GetDoubleFromObj(RTcl_interp, elem[i], &x);
 	if (ret != TCL_OK) x = NA_REAL;
@@ -470,9 +475,9 @@ SEXP RTcl_ObjFromDoubleVector(SEXP args)
 
 SEXP RTcl_ObjAsIntVector(SEXP args)
 {
-    int count;
+    Tcl_Size count, i;
     Tcl_Obj **elem, *obj;
-    int ret, i;
+    int ret;
     int x;
     SEXP ans;
 
@@ -487,10 +492,10 @@ SEXP RTcl_ObjAsIntVector(SEXP args)
 
     /* Then try as list */
     ret = Tcl_ListObjGetElements(RTcl_interp, obj, &count, &elem);
-    if (ret != TCL_OK) /* didn't work, return NULL */
+    if (ret != TCL_OK || count > R_XLEN_T_MAX) /* didn't work, return NULL */
 	return R_NilValue;
-
-    ans = allocVector(INTSXP, count);
+    
+    ans = allocVector(INTSXP, (R_xlen_t) count);
     for (i = 0 ; i < count ; i++){
 	ret = Tcl_GetIntFromObj(RTcl_interp, elem[i], &x);
 	if (ret != TCL_OK) x = NA_INTEGER;
@@ -525,7 +530,7 @@ SEXP RTcl_ObjFromIntVector(SEXP args)
 
 SEXP RTcl_ObjAsRawVector(SEXP args)
 {
-    int nb, count, i, j;
+    Tcl_Size count, nb, i, j;
     Tcl_Obj **elem, *obj;
     unsigned char *ret;
     SEXP ans, el;
@@ -536,7 +541,7 @@ SEXP RTcl_ObjAsRawVector(SEXP args)
     if (!obj) error(_("invalid tclObj -- perhaps saved from another session?"));
     ret = Tcl_GetByteArrayFromObj(obj, &nb);
     if (ret) {
-	ans = allocVector(RAWSXP, nb);
+	ans = allocVector(RAWSXP, (R_xlen_t) nb);
 	for (j = 0 ; j < nb ; j++) RAW(ans)[j] = ret[j];
 	return ans;
     }
@@ -544,10 +549,11 @@ SEXP RTcl_ObjAsRawVector(SEXP args)
     /* Then try as list */
     if (Tcl_ListObjGetElements(RTcl_interp, obj, &count, &elem)
 	!= TCL_OK) return R_NilValue;
-
-    PROTECT(ans = allocVector(VECSXP, count));
+    if (count > R_XLEN_T_MAX) return R_NilValue;
+    
+    PROTECT(ans = allocVector(VECSXP, (R_xlen_t) count));
     for (i = 0 ; i < count ; i++) {
-	el = allocVector(RAWSXP, nb);
+	el = allocVector(RAWSXP, (R_xlen_t) nb);
 	SET_VECTOR_ELT(ans, i, el);
 	ret = Tcl_GetByteArrayFromObj(elem[i], &nb);
 	for (j = 0 ; j < nb ; j++) RAW(el)[j] = ret[j];
